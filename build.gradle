/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/java_library_plugin.html
 */

String propValue(String propName, String defValue) {
    (project.hasProperty(propName) && project.getProperty(propName)) ? project.getProperty(propName) : defValue
}

version = propValue("ci_version","master");
group = "com.softwareplumbers.oss"

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'maven'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
	maven { url propValue("proxyMavenCentral", "https://repo.maven.apache.org/maven2/") }
  maven { url 'https://nexus.softwareplumbers.com/repository/maven-oss' }
}

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "https://nexus.softwareplumbers.com/repository/maven-oss") {
      	authentication(userName: propValue("mavenUploadUser",""), password: propValue("mavenUploadPassword",""))
      }
    }
  }
}

dependencies {

  compile group: 'com.softwareplumbers.oss', name: 'abstract-query-java', version: '0.1.4'
  compile group: 'org.mongodb', name: 'mongodb-driver-sync', version: '3.7.1'
	
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
	testImplementation group: 'org.glassfish', name: 'javax.json', version: '1.1.2'
}

jar {
  baseName 'mongo-query-format-java'
}


